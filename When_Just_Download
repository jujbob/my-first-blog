

1. need to make new vertualenv
 - python -m venv myvenv
 - (in linux) virtualenv --python=python3.4 myvenv

2. setup Django in the virtual environment myvenv
 - pig install django==1.8
 - (in linux) pip install django whitenoise
 - (in linux) pip install djangorestframework
 - (in linux) pip install pygments  # code highlight tool
 - (in linux) sudo apt-get install python3-imaging (for installing pillow) ref: http://edoli.tistory.com/92
 - (another way to install pillow) (in linux) pip install pillow  # for modeling ImageFiled (needed --> ape-get install libjpeg-dev python3-dev)
 - (another way to install pillow) (if you have troubles) sudo apt-get install libtiff5-dev libjpeg8-dev zlib1g-dev libfreetype6-dev liblcms2-dev libwebp-dev tcl8.6-dev tk8.6-dev python-tk
 - (in linux) pip install django-cleanup #for deleting images when imageFilds are updated
 - (in linux) pip install python-image-resize #for resizing images


        '''
        pil_image_obj = Image.open(self.image)
        new_image = imageresize.resize_width(pil_image_obj, 100)

        new_image_io =
        new_image.save(new_image_io, format='JPEG')

        temp_name = self.image.name
        self.image.delete(save=False)

        self.image.save(
            temp_name,
            content=ContentFile(new_image_io.getvalue()),
            save=False
        )

        super(Resource, self).save(*args, **kwargs)
        '''


3. database migration
 - python manage.py migrate

4. make superuser
 - python manage.py createsuperuser


[Add to git]

$ git status
$ git add -A .
$ git status
$ git commit -m "Added view and template for detailed blog post as well as CSS for the site."
$ git push


[when you want to add new model]
 1. python manage.py startapp blog
 2. go into blog/models.py --> make new model
 3. generation new database model from models.py
  - python manage.py makemigrations blog
  - python manage.py migrate blog
 4. adding to admin (blog/admin.py file)
  - from .models import Post
  - admin.site.register(Post)


[for facebook sign up and in ]
 1. pip install python-social-auth
 2. add new app from INSTALLED_APPS

    INSTALLED_APPS에 항목 추가
    새롭게 설치한 python-social-auth app을 추가합니다.
    이제 새롭게 User social auths 테이블에 생성되어 Thrid party로 가입한 사용자를 관리할 수 있습니다.
    TEMPLATE_CONTEXT_PROCESSORS에 항목 추가
    social.apps.django_app.context_processors.backends
    social.apps.django_app.context_processors.login_redirect
    AUTHENTICATION_BACKENDS 새롭게 추가
    인증 체계에 사용될 backend를 등록하는 항목
    기본으로 django.contrib.auth.backends.ModelBackend
    python-social-auth의 facebook을 추가
    OAuth 관련 변수 설정
    SOCIAL_AUTH_LOGIN_REDIRECT_URL
    로그인 후 되돌아올 URL
    SOCIAL_AUTH_URL_NAMESPACE
    인증 URL의 Namespace
    SOCIAL_AUTH_FACEBOOK_KEY/Secret
    Facebook 인증 Key/Secret
    SESSION_SERIALIZER
    세션 객체를 직렬화하는 처리기
    참고자료

[for rest_framework]

virtualenv --python=python3.4 env
source env/bin/activate


when you want to add new model
 1. python manage.py startapp authentication
 2. go into blog/models.py --> make new model
 3. generation new database model from models.py
  - python manage.py makemigrations blog
  - python manage.py migrate blog
 4. adding to admin (blog/admin.py file)
  - from .models import Post
  - admin.site.register(Post)

